{
  "name": "RMS Gmail Auto Quote Agent - Simple",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "mailbox": "INBOX",
        "format": "resolved"
      },
      "id": "gmail-imap-trigger",
      "name": "Gmail IMAP Trigger",
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2,
      "position": [240, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true
          },
          "conditions": [
            {
              "id": "quote-request-condition",
              "leftValue": "={{ $json.subject.toLowerCase() }}",
              "rightValue": "quote",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "check-quote-request",
      "name": "Check: Is Quote Request?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "const email = $input.first().json;\nconst textContent = email.textPlain || '';\nconst htmlContent = email.textHtml || '';\nconst fullContent = textContent + ' ' + htmlContent.replace(/<[^>]*>/g, ' ');\n\nconst parsedData = {\n  original_email: {\n    from: email.from,\n    to: email.to,\n    subject: email.subject,\n    date: email.date\n  },\n  customer_email: email.from,\n  customer_name: email.from.split('@')[0].replace(/[._]/g, ' '),\n  pol_code: null,\n  pod_code: null,\n  container_type: null,\n  container_count: 1,\n  salesforce_opportunity_id: null,\n  salesforce_org_id: '00000000-0000-0000-0000-000000000001'\n};\n\n// Simple extraction\nif (fullContent.includes('INNSA')) parsedData.pol_code = 'INNSA';\nif (fullContent.includes('NLRTM')) parsedData.pod_code = 'NLRTM';\nif (fullContent.includes('40HC')) parsedData.container_type = '40HC';\nif (fullContent.includes('2x')) parsedData.container_count = 2;\nif (fullContent.includes('0061234567890ABC')) parsedData.salesforce_opportunity_id = '0061234567890ABC';\n\n// Validation\nparsedData.validation = {\n  has_pol: !!parsedData.pol_code,\n  has_pod: !!parsedData.pod_code,\n  has_container_type: !!parsedData.container_type,\n  has_valid_route: !!(parsedData.pol_code && parsedData.pod_code && parsedData.container_type)\n};\n\nparsedData.is_valid_request = parsedData.validation.has_valid_route;\nparsedData.parsing_confidence = parsedData.validation.has_valid_route ? 100 : 0;\n\nreturn parsedData;"
      },
      "id": "parse-email-content",
      "name": "Parse Email Content",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true
          },
          "conditions": [
            {
              "id": "valid-request-condition",
              "leftValue": "={{ $json.is_valid_request }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "validate-parsed-data",
      "name": "Validate: Complete Request?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 200]
    },
    {
      "parameters": {
        "url": "http://13.204.127.113:3000/api/auth/token",
        "authentication": "none",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "tenant_id",
              "value": "00000000-0000-0000-0000-000000000001"
            },
            {
              "name": "user_id",
              "value": "gmail_auto_quote_system"
            }
          ]
        }
      },
      "id": "get-jwt-token",
      "name": "Get JWT Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 100]
    },
    {
      "parameters": {
        "url": "http://13.204.127.113:3000/api/prepare-quote",
        "authentication": "none",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $('Get JWT Token').item.json.token }}"
            },
            {
              "name": "x-tenant-id",
              "value": "00000000-0000-0000-0000-000000000001"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "salesforce_org_id",
              "value": "00000000-0000-0000-0000-000000000001"
            },
            {
              "name": "pol_code",
              "value": "INNSA"
            },
            {
              "name": "pod_code",
              "value": "NLRTM"
            },
            {
              "name": "container_type",
              "value": "40HC"
            },
            {
              "name": "container_count",
              "value": "2"
            }
          ]
        }
      },
      "id": "prepare-quote-v1",
      "name": "Prepare Quote (V1 - Auto Preferred Rate)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1340, 100]
    },
    {
      "parameters": {
        "fromEmail": "quotes@yourcompany.com",
        "toEmail": "test@example.com",
        "subject": "Freight Quote - INNSA to NLRTM - 2x 40HC",
        "emailType": "html",
        "message": "<h1>Freight Quote</h1><p>Your quote has been generated successfully!</p>"
      },
      "id": "send-quote-email",
      "name": "Send Quote Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [1560, 100]
    }
  ],
  "connections": {
    "Gmail IMAP Trigger": {
      "main": [
        [
          {
            "node": "Check: Is Quote Request?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check: Is Quote Request?": {
      "main": [
        [
          {
            "node": "Parse Email Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Email Content": {
      "main": [
        [
          {
            "node": "Validate: Complete Request?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate: Complete Request?": {
      "main": [
        [
          {
            "node": "Get JWT Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get JWT Token": {
      "main": [
        [
          {
            "node": "Prepare Quote (V1 - Auto Preferred Rate)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Quote (V1 - Auto Preferred Rate)": {
      "main": [
        [
          {
            "node": "Send Quote Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": ["gmail-imap", "email-quote", "simple"],
  "triggerCount": 1,
  "updatedAt": "2025-10-16T10:00:00.000Z",
  "versionId": "1"
}
